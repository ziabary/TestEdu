// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model tblUser {
  usrID              Int           @id @default(autoincrement())
  usrPhone           String        @unique
  usrName            String?
  usrEmail           String?
  usrAvatar          String?
  usrGrade           Int?
  usrQuestions       Int           @default(10)
  usrPassword        String
  usrLastLogin       DateTime?
  usrStatus          String        @default("active")
  usrCreatedBy_usrID Int?
  usrCreatedDateTime DateTime      @default(now())
  usrUpdatedBy_usrID Int?
  usrUpdatedDateTime DateTime      @updatedAt
  progress           tblProgress[]
  chats              tblChat[]
  accounts           tblAccount[]
  sessions           tblSession[]
  actionLogs         tblActionLogs[] @relation("ActionBy")
  createdLogs        tblActionLogs[] @relation("CreatedBy")
  updatedLogs        tblActionLogs[] @relation("UpdatedBy")
  practiceLogs       tblPracticeLog[]
  examLogs           tblExamLog[]
  exams              tblExam[]
}

model tblProgress {
  prgID              Int           @id @default(autoincrement())
  prgUserID          Int
  prgSubject         String
  prgChapter         String
  prgCompletion      Float
  prgLastActivity    DateTime
  prgData            Json
  prgCreatedBy_usrID Int
  prgCreatedDateTime DateTime      @default(now())
  prgUpdatedBy_usrID Int
  prgUpdatedDateTime DateTime      @updatedAt
  user               tblUser       @relation(fields: [prgUserID], references: [usrID])

  @@unique([prgUserID, prgSubject, prgChapter])
}

model tblChat {
  chtID              Int           @id @default(autoincrement())
  chtUserID          Int
  chtSessionID       String
  chtSubject         String?
  chtChapter         String?
  chtQuestion        String
  chtResponse        String
  chtCost            Int           @default(1)
  chtCreatedBy_usrID Int
  chtCreatedDateTime DateTime      @default(now())
  user               tblUser       @relation(fields: [chtUserID], references: [usrID])
  session            tblSession    @relation(fields: [chtSessionID], references: [sesID])
  content            tblContent?   @relation(fields: [chtSubject, chtChapter], references: [cntSubject, cntChapter])
  question           tblQuestion   @relation("QuestionChat", fields: [chtQuestion], references: [qstQuestion])
}

model tblSession {
  sesID              String        @id
  sesUserID          Int
  sesTitle           String?
  sesCreatedDateTime DateTime      @default(now())
  user               tblUser       @relation(fields: [sesUserID], references: [usrID])
  chats              tblChat[]
}

model tblContent {
  cntID              Int           @id @default(autoincrement())
  cntSubject         String
  cntChapter         String
  cntType            String
  cntTitle           String
  cntContent         String
  cntCreatedBy_usrID Int
  cntCreatedDateTime DateTime      @default(now())
  cntUpdatedBy_usrID Int
  cntUpdatedDateTime DateTime      @updatedAt
  questions          tblQuestion[]
  chatLogs           tblChat[]

  @@unique([cntSubject, cntChapter, cntType])
  @@unique([cntSubject, cntChapter])
}

model tblAccount {
  accID              Int           @id @default(autoincrement())
  accUserID          Int
  accBalance         Int           @default(0)
  accTotalSpent      Int           @default(0)
  accCreatedBy_usrID Int
  accCreatedDateTime DateTime      @default(now())
  accUpdatedBy_usrID Int
  accUpdatedDateTime DateTime      @updatedAt
  user               tblUser       @relation(fields: [accUserID], references: [usrID])
  invoices           tblInvoice[]
}

model tblInvoice {
  invID              Int           @id @default(autoincrement())
  invAccountID       Int
  invPackageID       Int
  invQuestions       Int
  invAmount          Int
  invStatus          String        @default("pending")
  invPaymentMethod   String
  invPaymentRefID    String?
  invCreatedBy_usrID Int
  invCreatedDateTime DateTime      @default(now())
  invUpdatedBy_usrID Int
  invUpdatedDateTime DateTime      @updatedAt
  account            tblAccount    @relation(fields: [invAccountID], references: [accID])
  package            tblPackage    @relation(fields: [invPackageID], references: [pkgID])
}

model tblActionLogs {
  atlID                Int         @id @default(autoincrement())
  atlBy_usrID          Int         @unique
  atlInsertionDateTime DateTime    @default(now())
  atlType              String
  atlDescription       Json
  user                 tblUser     @relation("ActionBy", fields: [atlBy_usrID], references: [usrID])
  createdBy            tblUser?    @relation("CreatedBy", fields: [atlBy_usrID], references: [usrID])
  updatedBy            tblUser?    @relation("UpdatedBy", fields: [atlBy_usrID], references: [usrID])
  examLogs             tblExamLog[]
  practiceLogs         tblPracticeLog[]
  examActions          tblExam[]   @relation("ExamAction")
}
model tblQuestion {
  qstID              Int           @id @default(autoincrement())
  qstSubject         String
  qstChapter         String
  qstType            String        // 'practice' or 'exam'
  qstDifficulty      Int           // 1-5
  qstQuestion        String        @unique
  qstAnswer          String
  qstExplanation     String?
  qstCreatedBy_usrID Int
  qstCreatedDateTime DateTime      @default(now())
  qstUpdatedBy_usrID Int
  qstUpdatedDateTime DateTime      @updatedAt
  content            tblContent    @relation(fields: [qstSubject, qstChapter], references: [cntSubject, cntChapter])
  practiceLogs       tblPracticeLog[]
  examLogs           tblExamLog[]
  chatLogs           tblChat[] @relation("QuestionChat")
}

model tblPackage {
  pkgID              Int           @id @default(autoincrement())
  pkgName            String
  pkgQuestions       Int
  pkgPrice           Int
  pkgDurationDays    Int
  pkgDescription     String
  pkgCreatedBy_usrID Int
  pkgCreatedDateTime DateTime      @default(now())
  pkgUpdatedBy_usrID Int
  pkgUpdatedDateTime DateTime      @updatedAt
  invoices           tblInvoice[]
}

model tblPracticeLog {
  plgID              Int           @id @default(autoincrement())
  plgUserID          Int
  plgQuestionID      Int
  plgAnswer          String
  plgIsCorrect       Boolean
  plgDuration        Int           // in seconds
  plgCreatedBy_usrID Int
  plgCreatedDateTime DateTime      @default(now())
  user               tblUser       @relation(fields: [plgUserID], references: [usrID])
  question           tblQuestion   @relation(fields: [plgQuestionID], references: [qstID])
  actionLog          tblActionLogs @relation(fields: [plgCreatedBy_usrID], references: [atlBy_usrID])
}

model tblExamLog {
  elgID              Int           @id @default(autoincrement())
  elgUserID          Int
  elgQuestionID      Int
  elgAnswer          String
  elgIsCorrect       Boolean
  elgExamID          Int
  elgCreatedBy_usrID Int
  elgCreatedDateTime DateTime      @default(now())
  user               tblUser       @relation(fields: [elgUserID], references: [usrID])
  question           tblQuestion   @relation(fields: [elgQuestionID], references: [qstID])
  exam               tblExam       @relation(fields: [elgExamID], references: [exmID])
  actionLog          tblActionLogs @relation(fields: [elgCreatedBy_usrID], references: [atlBy_usrID])
}

model tblExam {
  exmID              Int           @id @default(autoincrement())
  exmUserID          Int
  exmType            String        // 'chapter' or 'cumulative'
  exmDuration        Int           // in minutes
  exmQuestions       Int
  exmScore           Int
  exmMaxScore        Int
  exmStatus          String        // 'active', 'completed', 'expired'
  exmCreatedBy_usrID Int
  exmCreatedDateTime DateTime      @default(now())
  exmUpdatedBy_usrID Int
  exmUpdatedDateTime DateTime      @updatedAt
  user               tblUser       @relation(fields: [exmUserID], references: [usrID])
  questions          tblExamLog[]
  actionLogs         tblActionLogs[] @relation("ExamAction")
}
